angular.module("inspector",["inspector.search","inspector.results","inspector.location","inspector.services","ngRoute"]),angular.module("inspector.location",[]).controller("LocationDisplayController",["ResultService",function(ResultService){this.inspections=ResultService.inspections}]),angular.module("inspector.results",[]).controller("ResultsDisplayController",function($scope,$routeParams,$location,ResultService,Search){this.results=ResultService.value,this.findByLocationId=function(id){console.log("ResultsCtrl in findByLocationId: ",id),$routeParams.id=id,Search.getLocationResults(id).then(function(inspections){var sortedInspections=inspections.sort(function(a,b){return a.inspection_date<b.inspection_date?1:a.inspection_date>b.inspection_date?-1:0});ResultService.inspections=sortedInspections}).then(function(){$location.path("/location")})}}),ResultsDisplayController.$inject=["$scope","$routeParams","$location","ResultService","Search"],angular.module("inspector.search",[]).controller("SearchFormController",function($location,$http,$routeParams,Search,ResultService){console.log("SearchCtrl active!");this.searchForInfo=function(info){console.log("search called on SearchCtrl! + info: ",info),NaN!==Number(info)&&5===info.length?($routeParams.zip=info,Search.getZipResults(info).then(function(results){var restaurantNameMap=[],uniqueResults=[];results.forEach(function(item){-1===restaurantNameMap.indexOf(item.restaurant_name)&&(restaurantNameMap.push(item.restaurant_name),uniqueResults.push(item))});var sortedResults=uniqueResults.sort(function(a,b){return a.restaurant_name>b.restaurant_name?1:a.restaurant_name<b.restaurant_name?-1:0});ResultService.value=sortedResults,$location.path("/results")})):($routeParams.name=info,Search.getNameResults(info).then(function(results){var restaurantNameMap=[],uniqueResults=[];results.forEach(function(item){-1===restaurantNameMap.indexOf(item.restaurant_name)&&(restaurantNameMap.push(item.restaurant_name),uniqueResults.push(item))});var sortedResults=uniqueResults.sort(function(a,b){return a.restaurant_name>b.restaurant_name?1:a.restaurant_name<b.restaurant_name?-1:0});ResultService.value=sortedResults,$location.path("/results")}))}}),SearchFormController.$inject=["$location","$http","$routeParams","Search","ResultService"],angular.module("inspector").config(function($routeProvider){$routeProvider.when("/search",{templateUrl:"../views/search.html",controller:"SearchFormController",controllerAs:"SearchCtrl"}).when("/results",{templateUrl:"../views/results.html",controller:"ResultsDisplayController",controllerAs:"ResultsCtrl"}).when("/location",{templateUrl:"../views/restaurant.html",controller:"LocationDisplayController",controllerAs:"LocationCtrl"}).when("/",{templateUrl:"../views/search.html",controller:"SearchFormController",controllerAs:"SearchCtrl"}).otherwise({redirectTo:"/search"})}),angular.module("inspector.services",[]).factory("Search",function($http){var getZipResults=function(zip){return console.log("made it to getZipResults!"),$http({method:"GET",url:"/api/zip/"+zip})["catch"](function(err){console.log("Error in services: ",err)}).then(function(resp){return console.log("in services: ",resp),resp.data})},getStreetResults=function(street){return $http({method:"GET",url:"/api/street/"+street})["catch"](function(err){console.log("Error in services: ",err)}).then(function(resp){return resp.data})},getNameResults=function(name){return $http({method:"GET",url:"/api/name/"+name})["catch"](function(err){console.log("Error in services: ",err)}).then(function(resp){return resp.data})},getLocationResults=function(id){return $http({method:"GET",url:"/api/location/"+id})["catch"](function(err){console.log("Error in services: ",err)}).then(function(resp){return console.log("Response in getLocationResults: ",resp),resp.data})};return{getZipResults:getZipResults,getStreetResults:getStreetResults,getNameResults:getNameResults,getLocationResults:getLocationResults}}).service("ResultService",function(){this.value="",this.inspections=""});var router=require("express").Router(),Results=require("../models/results_model.js");router.get("/zip/:zip",function(req,res){Results.findByZip(req.params.zip).then(function(response){res.send(response)})}),router.get("/street/:street",function(req,res){Results.findByStreet(req.params.street).then(function(response){res.send(response)})}),router.get("/name/:name",function(req,res){Results.findByName(req.params.name).then(function(response){console.log("Response IN API: =========",response),res.send(response)})}),router.get("/location/:id",function(req,res){Results.findByLocationId(req.params.id).then(function(response){console.log("Response IN API: =========",response),res.send(response)})}),module.exports=router;var request=require("request"),mock_result=require("../../test/server/models/zip_78728_results.js"),Results=module.exports;Results.parseUserInput=function(userInput){},Results.findByZip=function(zip){var baseUrl="https://data.austintexas.gov/resource/nguv-n54k.json?zip_code="+zip,options={url:baseUrl,"X-App-Token":process.env.API_TOKEN};return new Promise(function(resolve,reject){request.get(options,function(error,response,body){return error?(console.log("Error!",error),error):(response.body=JSON.parse(body),console.log("response-body-length: ",response.body.length),resolve(response.body),void 0)})})},Results.findByName=function(name){var baseUrl="https://data.austintexas.gov/resource/nguv-n54k.json?$q="+name,options={url:baseUrl,"X-App-Token":process.env.API_TOKEN};return console.log("baseUrl = ",baseUrl),new Promise(function(resolve,reject){request.get(options,function(error,response,body){return error?(console.log("Error!",error),error):(response.body=JSON.parse(body),console.log("NAME response-body-length: ",response.body.length),resolve(response.body),void 0)})})},Results.findByStreetName=function(street){var baseUrl="https://data.austintexas.gov/resource/nguv-n54k.json?zip_code="+street,options={url:baseUrl,"X-App-Token":process.env.API_TOKEN};return new Promise(function(resolve,reject){request.get(options,function(error,response,body){return error?(console.log("Error!",error),error):(response.body=JSON.parse(body),console.log("response-body-length: ",response.body.length),resolve(response.body),void 0)})})},Results.findByLocationId=function(id){var baseUrl="https://data.austintexas.gov/resource/nguv-n54k.json?facility_id="+id,options={url:baseUrl,"X-App-Token":process.env.API_TOKEN};return new Promise(function(resolve,reject){request.get(options,function(error,response,body){return error?(console.log("Error!",error),error):(response.body=JSON.parse(body),console.log("LOCATION response-body-length: ",response.body.length),resolve(response.body),void 0)})})};var express=require("express"),Path=require("path"),morgan=require("morgan");require("es6-promise").polyfill();var routes=express.Router(),results_api=require("./api/results_api.js");routes.use(morgan("dev"));var assetFolder=Path.resolve(__dirname,"../client/");routes.use(express["static"](assetFolder));var angular=Path.resolve(__dirname,"../node_modules/");if(routes.use("/scripts",express["static"](angular)),routes.use("/api",results_api,function(){console.log("made it to server.js")}),"test"!==process.env.NODE_ENV){routes.get("/*",function(request,response){response.sendFile(assetFolder+"/index.html")});var app=express();app.use(require("body-parser").json()),app.use("/",routes);var port=process.env.PORT||8080;app.listen(port,function(){console.log("listening on port "+port)})}else module.exports=routes;